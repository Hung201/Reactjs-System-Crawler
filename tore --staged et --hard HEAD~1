[1mdiff --git a/et --hard HEAD~1 b/et --hard HEAD~1[m
[1mnew file mode 100644[m
[1mindex 0000000..48dbbbf[m
[1m--- /dev/null[m
[1m+++ b/et --hard HEAD~1[m	
[36m@@ -0,0 +1,37 @@[m
[32m+[m[32m[33m452a487[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m)[m HEAD@{0}: filter-branch: rewrite[m
[32m+[m[32m[33mb538fe4[m HEAD@{1}: commit: Remove hardcoded API token, use environment variables[m
[32m+[m[32m[33m119981b[m HEAD@{2}: commit: add interface runs and build apify[m
[32m+[m[32m[33m8de5ca6[m[33m ([m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m HEAD@{3}: filter-branch: rewrite[m
[32m+[m[32m[33mdb75891[m HEAD@{4}: commit: add api apify input_schema to interface (removed .env)[m
[32m+[m[32m[33mb5c46ea[m HEAD@{5}: commit: add api apify input_schema to interface[m
[32m+[m[32m[33m48166e5[m HEAD@{6}: Branch: renamed refs/heads/clean-main to refs/heads/main[m
[32m+[m[32m[33m48166e5[m HEAD@{8}: commit: Clean repository - remove sensitive data and restore current code[m
[32m+[m[32m[33mc9218a1[m HEAD@{9}: checkout: moving from c9218a1b0c752cdf828eefc3ac70a318167ef136 to clean-main[m
[32m+[m[32m[33mc9218a1[m HEAD@{10}: checkout: moving from main to c9218a1[m
[32m+[m[32m[33m48ae85d[m HEAD@{11}: checkout: moving from backup-current-code to main[m
[32m+[m[32m[33m48ae85d[m HEAD@{12}: checkout: moving from main to backup-current-code[m
[32m+[m[32m[33m48ae85d[m HEAD@{13}: rebase (abort): returning to refs/heads/main[m
[32m+[m[32m[33m48ae85d[m HEAD@{14}: rebase (abort): returning to refs/heads/main[m
[32m+[m[32m[33m82ef48a[m HEAD@{15}: commit: first hung[m
[32m+[m[32m[33md87318b[m HEAD@{16}: checkout: moving from hung to main[m
[32m+[m[32m[33m3b8d93e[m[33m ([m[1;31morigin/hung[m[33m)[m HEAD@{17}: checkout: moving from main to hung[m
[32m+[m[32m[33md87318b[m HEAD@{18}: checkout: moving from hung to main[m
[32m+[m[32m[33m3b8d93e[m[33m ([m[1;31morigin/hung[m[33m)[m HEAD@{19}: checkout: moving from main to hung[m
[32m+[m[32m[33md87318b[m HEAD@{20}: commit: fix add template and platform[m
[32m+[m[32m[33m69256ee[m HEAD@{21}: reset: moving to 69256ee[m
[32m+[m[32m[33m3b8d93e[m[33m ([m[1;31morigin/hung[m[33m)[m HEAD@{22}: checkout: moving from hung to main[m
[32m+[m[32m[33m3b8d93e[m[33m ([m[1;31morigin/hung[m[33m)[m HEAD@{23}: checkout: moving from main to hung[m
[32m+[m[32m[33m3b8d93e[m[33m ([m[1;31morigin/hung[m[33m)[m HEAD@{24}: commit: Add integrations safely - no tokens[m
[32m+[m[32m[33mc9218a1[m HEAD@{25}: reset: moving to HEAD~2[m
[32m+[m[32m[33m48ae85d[m HEAD@{26}: commit (amend): fix[m
[32m+[m[32m[33m69256ee[m HEAD@{27}: commit: fix[m
[32m+[m[32m[33mbeea60e[m HEAD@{28}: commit: add template and platform[m
[32m+[m[32m[33mc9218a1[m HEAD@{29}: commit: slice file[m
[32m+[m[32m[33m3e34984[m HEAD@{30}: commit: fix update campaign[m
[32m+[m[32m[33m8a07e48[m HEAD@{31}: commit: integrate api history and stats campaign, slice file campaign[m
[32m+[m[32m[33med481a1[m HEAD@{32}: commit: add campaign[m
[32m+[m[32m[33md490367[m HEAD@{33}: commit: add theme edit actor[m
[32m+[m[32m[33m861bf98[m HEAD@{34}: commit: add api crud user and pagination user[m
[32m+[m[32m[33m57593bf[m HEAD@{35}: commit: connect db[m
[32m+[m[32m[33m5b31dd3[m HEAD@{36}: Branch: renamed refs/heads/master to refs/heads/main[m
[32m+[m[32m[33m5b31dd3[m HEAD@{38}: commit (initial): first commit[m
[1mdiff --git a/src/pages/Integrations/ActorDetail.js b/src/pages/Integrations/ActorDetail.js[m
[1mnew file mode 100644[m
[1mindex 0000000..c122feb[m
[1m--- /dev/null[m
[1m+++ b/src/pages/Integrations/ActorDetail.js[m
[36m@@ -0,0 +1,868 @@[m
[32m+[m[32mimport React, { useState, useEffect } from 'react';[m
[32m+[m[32mimport { useParams, useNavigate } from 'react-router-dom';[m
[32m+[m[32mimport { ArrowLeft, Play, Download, Clock, Calendar, DollarSign, CheckCircle, XCircle, AlertCircle, ExternalLink, ChevronLeft, ChevronRight } from 'lucide-react';[m
[32m+[m[32mimport ApifyService from '../../services/apifyService';[m
[32m+[m[32mimport toast from 'react-hot-toast';[m
[32m+[m
[32m+[m[32mconst ActorDetail = () => {[m
[32m+[m[32m    const { actorId } = useParams();[m
[32m+[m[32m    const navigate = useNavigate();[m
[32m+[m[32m    const [activeTab, setActiveTab] = useState('runs');[m
[32m+[m[32m    const [actor, setActor] = useState(null);[m
[32m+[m[32m    const [runs, setRuns] = useState([]);[m
[32m+[m[32m    const [builds, setBuilds] = useState([]);[m
[32m+[m[32m    const [loading, setLoading] = useState(true);[m
[32m+[m[32m    const [loadingRuns, setLoadingRuns] = useState(false);[m
[32m+[m[32m    const [apiToken, setApiToken] = useState('');[m
[32m+[m
[32m+[m[32m    // Pagination state[m
[32m+[m[32m    const [currentPage, setCurrentPage] = useState(1);[m
[32m+[m[32m    const [itemsPerPage, setItemsPerPage] = useState(20);[m
[32m+[m[32m    const [totalRuns, setTotalRuns] = useState(0);[m
[32m+[m
[32m+[m[32m    // Builds pagination state[m
[32m+[m[32m    const [currentBuildsPage, setCurrentBuildsPage] = useState(1);[m
[32m+[m[32m    const [buildsItemsPerPage, setBuildsItemsPerPage] = useState(20);[m
[32m+[m[32m    const [totalBuilds, setTotalBuilds] = useState(0);[m
[32m+[m[32m    const [loadingBuilds, setLoadingBuilds] = useState(false);[m
[32m+[m[32m    const [dataLoaded, setDataLoaded] = useState({ actor: false, runs: false, builds: false });[m
[32m+[m
[32m+[m[32m    // Timeout Ä‘á»ƒ trÃ¡nh loading vÃ´ táº­n[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        const timeout = setTimeout(() => {[m
[32m+[m[32m            if (loading) {[m
[32m+[m[32m                console.log('Loading timeout - forcing loading to false');[m
[32m+[m[32m                setLoading(false);[m
[32m+[m[32m                toast.error('Táº£i dá»¯ liá»‡u quÃ¡ lÃ¢u, vui lÃ²ng thá»­ láº¡i');[m
[32m+[m[32m            }[m
[32m+[m[32m        }, 10000); // 10 giÃ¢y[m
[32m+[m
[32m+[m[32m        return () => clearTimeout(timeout);[m
[32m+[m[32m    }, [loading]);[m
[32m+[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        // Láº¥y API token tá»« localStorage hoáº·c context[m
[32m+[m[32m        let token = localStorage.getItem('apify_api_token') || '';[m
[32m+[m
[32m+[m[32m        // Náº¿u khÃ´ng cÃ³ token, khÃ´ng set token máº·c Ä‘á»‹nh[m
[32m+[m[32m        if (!token) {[m
[32m+[m[32m            console.warn('No API token found. Please set your Apify API token.');[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        console.log('Setting API token:', token ? 'Present' : 'Missing');[m
[32m+[m[32m        setApiToken(token);[m
[32m+[m[32m    }, []);[m
[32m+[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        console.log('ActorDetail useEffect triggered:', { actorId, apiToken: apiToken ? 'Present' : 'Missing' });[m
[32m+[m[32m        if (actorId && apiToken) {[m
[32m+[m[32m            console.log('Starting to load actor details, runs and builds');[m
[32m+[m[32m            loadActorDetails();[m
[32m+[m[32m            loadRuns();[m
[32m+[m[32m            loadBuilds(); // Load builds ngay tá»« Ä‘áº§u[m
[32m+[m[32m        } else {[m
[32m+[m[32m            console.log('Missing actorId or apiToken, setting loading to false');[m
[32m+[m[32m            setLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    }, [actorId, apiToken]);[m
[32m+[m
[32m+[m[32m    // Kiá»ƒm tra khi nÃ o táº¥t cáº£ dá»¯ liá»‡u Ä‘Ã£ Ä‘Æ°á»£c load[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        if (dataLoaded.actor && dataLoaded.runs && dataLoaded.builds) {[m
[32m+[m[32m            setLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    }, [dataLoaded]);[m
[32m+[m
[32m+[m[32m    const loadActorDetails = async () => {[m
[32m+[m[32m        try {[m
[32m+[m[32m            const apifyService